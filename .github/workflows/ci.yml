name: CI Pipeline

on:
  push:
    branches:
      - dev

jobs:
  dev-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m unittest discover -s tests -v

  merge-to-master:
    runs-on: ubuntu-latest
    needs: dev-branch
    if: ${{ success() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Git user name and email
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Fetch all branches
        run: |
          git fetch --all  # Assurez-vous que toutes les branches sont à jour

      - name: Show branch status
        run: |
          git status  # Vérifiez l'état actuel des branches
          git log --oneline --graph --decorate 
      - name: Fast-forward master branch
        run: |
          git checkout master
          git pull origin master --rebase  # Réalisez un rebase pour garantir que master est à jour avant la fusion
          git merge dev --allow-unrelated-histories || (echo "Merge failed, investigating"; exit 1)

  failure-recovery:
    runs-on: ubuntu-latest
    needs: dev-branch
    if: ${{ failure() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Git user name and email
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Fetch all branches
        run: |
          git fetch --all  # Assurez-vous que toutes les branches sont à jour

      - name: Save failed commit to 'failure' branch
        run: |
          git checkout -b failure || git checkout failure  # Crée ou accède à la branche 'failure'
          git merge dev --no-commit || true  # Fusionne sans commit pour ne pas briser la branche 'failure'
          git commit -am "Save failed state from dev branch" || true  # Effectue un commit avec un message descriptif
          git push origin failure  # Pousse les modifications dans la branche 'failure'
