name: CI Pipeline

on:
  push:
    branches:
      - dev  # Exécute le workflow lors d'un commit sur la branche dev

jobs:
  dev-branch:
    runs-on: ubuntu-latest  # Exécute sur la dernière version d'Ubuntu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Récupère le code du dépôt

      - name: Set up Python
        uses: actions/setup-python@v3  # Configure Python (pour un projet Python)
        with:
          python-version: '3.x'  # Spécifiez la version de Python

      - name: Run tests
        run: |
          python -m unittest discover -s tests -v  # Lance les tests unitaires dans le dossier 'tests'

  merge-to-master:
    if: ${{ success() }}  # Exécute cette étape seulement si les tests sont réussis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Git user name and email
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Fast-forward merge to master
        run: |
          git fetch origin
          git checkout master
          git merge --ff-only dev  # Fast-forward merge de dev vers master
          git push origin master  # Pousse les changements vers master

  failure-recovery:
    if: failure()  # Exécute cette étape si les tests échouent
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Set Git user name and email
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Create a failure branch
        run: |
          FAILURE_BRANCH="failures/$(date +%s)"  # Crée un nom unique pour la branche de failure basé sur le timestamp
          git checkout -b $FAILURE_BRANCH  # Crée une nouvelle branche pour le commit échoué
          git commit --amend --no-edit  # Annule le dernier commit échoué sans modification
          git push origin $FAILURE_BRANCH  # Pousse la branche de failure vers le dépôt
          git reset HEAD@{1}  # Annule le dernier commit échoué sur la branche dev
          git push origin dev --force  # Force le push pour retirer le commit échoué de la branche dev
