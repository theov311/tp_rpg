name: CI Pipeline

on:
  push:
    branches:
      - dev

jobs:
  dev-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Run tests
        run: |
          python -m unittest discover -s tests -v
        continue-on-error: true  # Permet de continuer même si les tests échouent

      - name: Commit changes (even if tests fail)
        if: success()  # Se produit même si les tests échouent
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .  # Ajoute toutes les modifications
          git commit -m "CI: Commit even if tests fail" || echo "No changes to commit"
          git push origin dev  # Pousse les changements dans la branche dev


  merge-to-master:
    runs-on: ubuntu-latest
    needs: dev-branch
    if: ${{ success() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Git user name and email
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Fetch all branches
        run: |
          git fetch --all  # Assurez-vous que toutes les branches sont à jour

      - name: Show branch status
        run: |
          git status  # Vérifiez l'état actuel des branches
          git log --oneline --graph --decorate  # Visualisez l'historique des commits

      - name: Fast-forward master branch
        run: |
          git checkout master
          git pull origin master --rebase  # Réalisez un rebase pour garantir que master est à jour avant la fusion
          git merge dev --allow-unrelated-histories || (echo "Merge failed, investigating"; exit 1)

  failure-recovery:
    runs-on: ubuntu-latest
    needs: dev-branch
    if: ${{ failure() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log error information
        run: |
          echo "CI pipeline failed. Checking last 10 commits."
          git log -n 10 --oneline  # Affiche les derniers commits pour mieux comprendre la situation

      - name: Ensure dev branch is up to date
        run: |
          git fetch origin
          git checkout dev
          git reset --hard origin/dev

      - name: Create failure branch
        run: |
          failure_branch="failure/$(date +%s)"
          git checkout -b $failure_branch
          git push origin $failure_branch